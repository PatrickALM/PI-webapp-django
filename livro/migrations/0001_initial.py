# Generated by Django 4.2.4 on 2023-11-02 13:16

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('usuarios', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Categoriadb',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50)),
                ('descricao', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Livrosdb',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, null=True, upload_to='capa_livro')),
                ('titulo', models.CharField(max_length=100)),
                ('autor', models.CharField(max_length=50)),
                ('disponibilidade', models.BooleanField(default=True)),
                ('img_livro', models.BinaryField(blank=True, default=None, null=True)),
                ('ISBN', models.CharField(max_length=13, validators=[django.core.validators.MinLengthValidator(13, 'Certifique-se de digitar um ISBN válido')])),
                ('data_cadastro', models.DateField(default=datetime.date(2023, 11, 2))),
                ('ano_de_publicacao', models.PositiveIntegerField(default=2023, validators=[django.core.validators.MinValueValidator(1900, 'Certifique-se que o ano de publicação seja maior ou igual a 1900.'), django.core.validators.MaxValueValidator(2023, 'Certifique-se de que o ano de publicação seja uma data válida')])),
                ('unidades', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1, 'Certifique-se de que a quantidade de exemplares seja maior ou igual a 1')])),
                ('qntd_emprestado', models.IntegerField(default=0)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='livro.categoriadb')),
            ],
            options={
                'verbose_name': 'Livro',
            },
        ),
        migrations.CreateModel(
            name='Emprestimosdb',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_saida', models.DateField(default=datetime.date(2023, 11, 2))),
                ('data_retorno_previsto', models.DateField(default=datetime.date(2023, 11, 9))),
                ('data_retorno', models.DateField(blank=True, default=None, null=True)),
                ('situacao', models.CharField(choices=[('Em andamento', 'Em andamento'), ('Atrasado', 'Atrasado'), ('Concluido', 'Concluido')], default='Em andamento', max_length=30)),
                ('id_funcionario', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='usuarios.funcionariosdb')),
                ('id_livro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='livro.livrosdb')),
                ('id_usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usuarios.usuariosdb')),
            ],
            options={
                'verbose_name': 'Empréstimo',
            },
        ),
    ]
